//
// Autogenerated by Thrift Compiler (0.14.0)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//
"use strict";

var thrift = require('thrift');
var Thrift = thrift.Thrift;
var Q = thrift.Q;
var Int64 = require('node-int64');

var shared_ttypes = require('./shared_types');
var cspy_ttypes = require('./cspy_types');
var ServiceRegistry_ttypes = require('./ServiceRegistry_types');


var HeartbeatService = require('./HeartbeatService');
var HeartbeatServiceClient = HeartbeatService.Client;
var HeartbeatServiceProcessor = HeartbeatService.Processor;
var ttypes = require('./ampsync_types');
//HELPER FUNCTIONS AND STRUCTURES

var CoresRegistry_NumberOfCores_args = function(args) {
};
CoresRegistry_NumberOfCores_args.prototype = {};
CoresRegistry_NumberOfCores_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_NumberOfCores_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_NumberOfCores_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_NumberOfCores_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = args.success;
    }
  }
};
CoresRegistry_NumberOfCores_result.prototype = {};
CoresRegistry_NumberOfCores_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.I32) {
        this.success = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_NumberOfCores_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_NumberOfCores_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.I32, 0);
    output.writeI32(this.success);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_AllCores_args = function(args) {
};
CoresRegistry_AllCores_args.prototype = {};
CoresRegistry_AllCores_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_AllCores_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_AllCores_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_AllCores_result = function(args) {
  this.success = null;
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = Thrift.copyList(args.success, [ttypes.CoreInfo]);
    }
  }
};
CoresRegistry_AllCores_result.prototype = {};
CoresRegistry_AllCores_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        this.success = [];
        var _rtmp325 = input.readListBegin();
        var _size24 = _rtmp325.size || 0;
        for (var _i26 = 0; _i26 < _size24; ++_i26) {
          var elem27 = null;
          elem27 = new ttypes.CoreInfo();
          elem27.read(input);
          this.success.push(elem27);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_AllCores_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_AllCores_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter28 in this.success) {
      if (this.success.hasOwnProperty(iter28)) {
        iter28 = this.success[iter28];
        iter28.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_GetInfo_args = function(args) {
  this.coreNumber = null;
  if (args) {
    if (args.coreNumber !== undefined && args.coreNumber !== null) {
      this.coreNumber = args.coreNumber;
    }
  }
};
CoresRegistry_GetInfo_args.prototype = {};
CoresRegistry_GetInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.coreNumber = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_GetInfo_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_GetInfo_args');
  if (this.coreNumber !== null && this.coreNumber !== undefined) {
    output.writeFieldBegin('coreNumber', Thrift.Type.I32, 1);
    output.writeI32(this.coreNumber);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_GetInfo_result = function(args) {
  this.success = null;
  this.partner = null;
  if (args instanceof ttypes.UnknownPartner) {
    this.partner = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CoreInfo(args.success);
    }
    if (args.partner !== undefined && args.partner !== null) {
      this.partner = args.partner;
    }
  }
};
CoresRegistry_GetInfo_result.prototype = {};
CoresRegistry_GetInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CoreInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.partner = new ttypes.UnknownPartner();
        this.partner.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_GetInfo_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_GetInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.partner !== null && this.partner !== undefined) {
    output.writeFieldBegin('partner', Thrift.Type.STRUCT, 1);
    this.partner.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_SetInfo_args = function(args) {
  this.updated = null;
  if (args) {
    if (args.updated !== undefined && args.updated !== null) {
      this.updated = new ttypes.CoreInfo(args.updated);
    }
  }
};
CoresRegistry_SetInfo_args.prototype = {};
CoresRegistry_SetInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.updated = new ttypes.CoreInfo();
        this.updated.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_SetInfo_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_SetInfo_args');
  if (this.updated !== null && this.updated !== undefined) {
    output.writeFieldBegin('updated', Thrift.Type.STRUCT, 1);
    this.updated.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_SetInfo_result = function(args) {
};
CoresRegistry_SetInfo_result.prototype = {};
CoresRegistry_SetInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_SetInfo_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_SetInfo_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_SetInfoPartial_args = function(args) {
  this.updated = null;
  this.props = null;
  if (args) {
    if (args.updated !== undefined && args.updated !== null) {
      this.updated = args.updated;
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field updated is unset!');
    }
    if (args.props !== undefined && args.props !== null) {
      this.props = Thrift.copyMap(args.props, [null]);
    } else {
      throw new Thrift.TProtocolException(Thrift.TProtocolExceptionType.UNKNOWN, 'Required field props is unset!');
    }
  }
};
CoresRegistry_SetInfoPartial_args.prototype = {};
CoresRegistry_SetInfoPartial_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.updated = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.MAP) {
        this.props = {};
        var _rtmp330 = input.readMapBegin();
        var _size29 = _rtmp330.size || 0;
        for (var _i31 = 0; _i31 < _size29; ++_i31) {
          var key32 = null;
          var val33 = null;
          key32 = input.readString();
          val33 = input.readString();
          this.props[key32] = val33;
        }
        input.readMapEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_SetInfoPartial_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_SetInfoPartial_args');
  if (this.updated !== null && this.updated !== undefined) {
    output.writeFieldBegin('updated', Thrift.Type.I32, 1);
    output.writeI32(this.updated);
    output.writeFieldEnd();
  }
  if (this.props !== null && this.props !== undefined) {
    output.writeFieldBegin('props', Thrift.Type.MAP, 2);
    output.writeMapBegin(Thrift.Type.STRING, Thrift.Type.STRING, Thrift.objectLength(this.props));
    for (var kiter34 in this.props) {
      if (this.props.hasOwnProperty(kiter34)) {
        var viter35 = this.props[kiter34];
        output.writeString(kiter34);
        output.writeString(viter35);
      }
    }
    output.writeMapEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_SetInfoPartial_result = function(args) {
};
CoresRegistry_SetInfoPartial_result.prototype = {};
CoresRegistry_SetInfoPartial_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_SetInfoPartial_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_SetInfoPartial_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_PartnerCores_args = function(args) {
  this.partner = null;
  if (args) {
    if (args.partner !== undefined && args.partner !== null) {
      this.partner = args.partner;
    }
  }
};
CoresRegistry_PartnerCores_args.prototype = {};
CoresRegistry_PartnerCores_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.partner = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_PartnerCores_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_PartnerCores_args');
  if (this.partner !== null && this.partner !== undefined) {
    output.writeFieldBegin('partner', Thrift.Type.I32, 1);
    output.writeI32(this.partner);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_PartnerCores_result = function(args) {
  this.success = null;
  this.partner = null;
  if (args instanceof ttypes.UnknownPartner) {
    this.partner = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CoreRange(args.success);
    }
    if (args.partner !== undefined && args.partner !== null) {
      this.partner = args.partner;
    }
  }
};
CoresRegistry_PartnerCores_result.prototype = {};
CoresRegistry_PartnerCores_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CoreRange();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.partner = new ttypes.UnknownPartner();
        this.partner.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_PartnerCores_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_PartnerCores_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.partner !== null && this.partner !== undefined) {
    output.writeFieldBegin('partner', Thrift.Type.STRUCT, 1);
    this.partner.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_SetNumberOfCores_args = function(args) {
  this.partner = null;
  this.numberOfCores = null;
  if (args) {
    if (args.partner !== undefined && args.partner !== null) {
      this.partner = args.partner;
    }
    if (args.numberOfCores !== undefined && args.numberOfCores !== null) {
      this.numberOfCores = args.numberOfCores;
    }
  }
};
CoresRegistry_SetNumberOfCores_args.prototype = {};
CoresRegistry_SetNumberOfCores_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 1:
      if (ftype == Thrift.Type.I32) {
        this.partner = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.numberOfCores = input.readI32();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_SetNumberOfCores_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_SetNumberOfCores_args');
  if (this.partner !== null && this.partner !== undefined) {
    output.writeFieldBegin('partner', Thrift.Type.I32, 1);
    output.writeI32(this.partner);
    output.writeFieldEnd();
  }
  if (this.numberOfCores !== null && this.numberOfCores !== undefined) {
    output.writeFieldBegin('numberOfCores', Thrift.Type.I32, 2);
    output.writeI32(this.numberOfCores);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_SetNumberOfCores_result = function(args) {
  this.success = null;
  this.partner = null;
  if (args instanceof ttypes.UnknownPartner) {
    this.partner = args;
    return;
  }
  if (args) {
    if (args.success !== undefined && args.success !== null) {
      this.success = new ttypes.CoreRange(args.success);
    }
    if (args.partner !== undefined && args.partner !== null) {
      this.partner = args.partner;
    }
  }
};
CoresRegistry_SetNumberOfCores_result.prototype = {};
CoresRegistry_SetNumberOfCores_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid) {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ttypes.CoreRange();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.partner = new ttypes.UnknownPartner();
        this.partner.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_SetNumberOfCores_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_SetNumberOfCores_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.partner !== null && this.partner !== undefined) {
    output.writeFieldBegin('partner', Thrift.Type.STRUCT, 1);
    this.partner.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_ResetAfterDebugSession_args = function(args) {
};
CoresRegistry_ResetAfterDebugSession_args.prototype = {};
CoresRegistry_ResetAfterDebugSession_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_ResetAfterDebugSession_args.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_ResetAfterDebugSession_args');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistry_ResetAfterDebugSession_result = function(args) {
};
CoresRegistry_ResetAfterDebugSession_result.prototype = {};
CoresRegistry_ResetAfterDebugSession_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true) {
    var ret = input.readFieldBegin();
    var ftype = ret.ftype;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    input.skip(ftype);
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

CoresRegistry_ResetAfterDebugSession_result.prototype.write = function(output) {
  output.writeStructBegin('CoresRegistry_ResetAfterDebugSession_result');
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

var CoresRegistryClient = exports.Client = function(output, pClass) {
  this.output = output;
  this.pClass = pClass;
  this._seqid = 0;
  this._reqs = {};
};
Thrift.inherits(CoresRegistryClient, HeartbeatServiceClient);
CoresRegistryClient.prototype.seqid = function() { return this._seqid; };
CoresRegistryClient.prototype.new_seqid = function() { return this._seqid += 1; };

CoresRegistryClient.prototype.NumberOfCores = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_NumberOfCores();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_NumberOfCores();
  }
};

CoresRegistryClient.prototype.send_NumberOfCores = function() {
  var output = new this.pClass(this.output);
  var args = new CoresRegistry_NumberOfCores_args();
  try {
    output.writeMessageBegin('NumberOfCores', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.recv_NumberOfCores = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CoresRegistry_NumberOfCores_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('NumberOfCores failed: unknown result');
};

CoresRegistryClient.prototype.AllCores = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_AllCores();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_AllCores();
  }
};

CoresRegistryClient.prototype.send_AllCores = function() {
  var output = new this.pClass(this.output);
  var args = new CoresRegistry_AllCores_args();
  try {
    output.writeMessageBegin('AllCores', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.recv_AllCores = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CoresRegistry_AllCores_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('AllCores failed: unknown result');
};

CoresRegistryClient.prototype.GetInfo = function(coreNumber, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_GetInfo(coreNumber);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_GetInfo(coreNumber);
  }
};

CoresRegistryClient.prototype.send_GetInfo = function(coreNumber) {
  var output = new this.pClass(this.output);
  var params = {
    coreNumber: coreNumber
  };
  var args = new CoresRegistry_GetInfo_args(params);
  try {
    output.writeMessageBegin('GetInfo', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.recv_GetInfo = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CoresRegistry_GetInfo_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.partner) {
    return callback(result.partner);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('GetInfo failed: unknown result');
};

CoresRegistryClient.prototype.SetInfo = function(updated, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_SetInfo(updated);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_SetInfo(updated);
  }
};

CoresRegistryClient.prototype.send_SetInfo = function(updated) {
  var output = new this.pClass(this.output);
  var params = {
    updated: updated
  };
  var args = new CoresRegistry_SetInfo_args(params);
  try {
    output.writeMessageBegin('SetInfo', Thrift.MessageType.ONEWAY, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    this.output.flush();
    var callback = this._reqs[this.seqid()] || function() {};
    delete this._reqs[this.seqid()];
    callback(null);
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.SetInfoPartial = function(updated, props, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_SetInfoPartial(updated, props);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_SetInfoPartial(updated, props);
  }
};

CoresRegistryClient.prototype.send_SetInfoPartial = function(updated, props) {
  var output = new this.pClass(this.output);
  var params = {
    updated: updated,
    props: props
  };
  var args = new CoresRegistry_SetInfoPartial_args(params);
  try {
    output.writeMessageBegin('SetInfoPartial', Thrift.MessageType.ONEWAY, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    this.output.flush();
    var callback = this._reqs[this.seqid()] || function() {};
    delete this._reqs[this.seqid()];
    callback(null);
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.PartnerCores = function(partner, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_PartnerCores(partner);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_PartnerCores(partner);
  }
};

CoresRegistryClient.prototype.send_PartnerCores = function(partner) {
  var output = new this.pClass(this.output);
  var params = {
    partner: partner
  };
  var args = new CoresRegistry_PartnerCores_args(params);
  try {
    output.writeMessageBegin('PartnerCores', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.recv_PartnerCores = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CoresRegistry_PartnerCores_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.partner) {
    return callback(result.partner);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('PartnerCores failed: unknown result');
};

CoresRegistryClient.prototype.SetNumberOfCores = function(partner, numberOfCores, callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_SetNumberOfCores(partner, numberOfCores);
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_SetNumberOfCores(partner, numberOfCores);
  }
};

CoresRegistryClient.prototype.send_SetNumberOfCores = function(partner, numberOfCores) {
  var output = new this.pClass(this.output);
  var params = {
    partner: partner,
    numberOfCores: numberOfCores
  };
  var args = new CoresRegistry_SetNumberOfCores_args(params);
  try {
    output.writeMessageBegin('SetNumberOfCores', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.recv_SetNumberOfCores = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CoresRegistry_SetNumberOfCores_result();
  result.read(input);
  input.readMessageEnd();

  if (null !== result.partner) {
    return callback(result.partner);
  }
  if (null !== result.success) {
    return callback(null, result.success);
  }
  return callback('SetNumberOfCores failed: unknown result');
};

CoresRegistryClient.prototype.ResetAfterDebugSession = function(callback) {
  this._seqid = this.new_seqid();
  if (callback === undefined) {
    var _defer = Q.defer();
    this._reqs[this.seqid()] = function(error, result) {
      if (error) {
        _defer.reject(error);
      } else {
        _defer.resolve(result);
      }
    };
    this.send_ResetAfterDebugSession();
    return _defer.promise;
  } else {
    this._reqs[this.seqid()] = callback;
    this.send_ResetAfterDebugSession();
  }
};

CoresRegistryClient.prototype.send_ResetAfterDebugSession = function() {
  var output = new this.pClass(this.output);
  var args = new CoresRegistry_ResetAfterDebugSession_args();
  try {
    output.writeMessageBegin('ResetAfterDebugSession', Thrift.MessageType.CALL, this.seqid());
    args.write(output);
    output.writeMessageEnd();
    return this.output.flush();
  }
  catch (e) {
    delete this._reqs[this.seqid()];
    if (typeof output.reset === 'function') {
      output.reset();
    }
    throw e;
  }
};

CoresRegistryClient.prototype.recv_ResetAfterDebugSession = function(input,mtype,rseqid) {
  var callback = this._reqs[rseqid] || function() {};
  delete this._reqs[rseqid];
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(input);
    input.readMessageEnd();
    return callback(x);
  }
  var result = new CoresRegistry_ResetAfterDebugSession_result();
  result.read(input);
  input.readMessageEnd();

  callback(null);
};
var CoresRegistryProcessor = exports.Processor = function(handler) {
  this._handler = handler;
};
Thrift.inherits(CoresRegistryProcessor, HeartbeatServiceProcessor);
CoresRegistryProcessor.prototype.process = function(input, output) {
  var r = input.readMessageBegin();
  if (this['process_' + r.fname]) {
    return this['process_' + r.fname].call(this, r.rseqid, input, output);
  } else {
    input.skip(Thrift.Type.STRUCT);
    input.readMessageEnd();
    var x = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN_METHOD, 'Unknown function ' + r.fname);
    output.writeMessageBegin(r.fname, Thrift.MessageType.EXCEPTION, r.rseqid);
    x.write(output);
    output.writeMessageEnd();
    output.flush();
  }
};
CoresRegistryProcessor.prototype.process_NumberOfCores = function(seqid, input, output) {
  var args = new CoresRegistry_NumberOfCores_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.NumberOfCores.length === 0) {
    Q.fcall(this._handler.NumberOfCores.bind(this._handler)
    ).then(function(result) {
      var result_obj = new CoresRegistry_NumberOfCores_result({success: result});
      output.writeMessageBegin("NumberOfCores", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("NumberOfCores", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.NumberOfCores(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CoresRegistry_NumberOfCores_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("NumberOfCores", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("NumberOfCores", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CoresRegistryProcessor.prototype.process_AllCores = function(seqid, input, output) {
  var args = new CoresRegistry_AllCores_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.AllCores.length === 0) {
    Q.fcall(this._handler.AllCores.bind(this._handler)
    ).then(function(result) {
      var result_obj = new CoresRegistry_AllCores_result({success: result});
      output.writeMessageBegin("AllCores", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("AllCores", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.AllCores(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CoresRegistry_AllCores_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("AllCores", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("AllCores", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CoresRegistryProcessor.prototype.process_GetInfo = function(seqid, input, output) {
  var args = new CoresRegistry_GetInfo_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.GetInfo.length === 1) {
    Q.fcall(this._handler.GetInfo.bind(this._handler),
      args.coreNumber
    ).then(function(result) {
      var result_obj = new CoresRegistry_GetInfo_result({success: result});
      output.writeMessageBegin("GetInfo", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.UnknownPartner) {
        result = new CoresRegistry_GetInfo_result(err);
        output.writeMessageBegin("GetInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("GetInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.GetInfo(args.coreNumber, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.UnknownPartner) {
        result_obj = new CoresRegistry_GetInfo_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("GetInfo", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("GetInfo", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CoresRegistryProcessor.prototype.process_SetInfo = function(seqid, input, output) {
  var args = new CoresRegistry_SetInfo_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.SetInfo(args.updated);
};
CoresRegistryProcessor.prototype.process_SetInfoPartial = function(seqid, input, output) {
  var args = new CoresRegistry_SetInfoPartial_args();
  args.read(input);
  input.readMessageEnd();
  this._handler.SetInfoPartial(args.updated, args.props);
};
CoresRegistryProcessor.prototype.process_PartnerCores = function(seqid, input, output) {
  var args = new CoresRegistry_PartnerCores_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.PartnerCores.length === 1) {
    Q.fcall(this._handler.PartnerCores.bind(this._handler),
      args.partner
    ).then(function(result) {
      var result_obj = new CoresRegistry_PartnerCores_result({success: result});
      output.writeMessageBegin("PartnerCores", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.UnknownPartner) {
        result = new CoresRegistry_PartnerCores_result(err);
        output.writeMessageBegin("PartnerCores", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("PartnerCores", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.PartnerCores(args.partner, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.UnknownPartner) {
        result_obj = new CoresRegistry_PartnerCores_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("PartnerCores", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("PartnerCores", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CoresRegistryProcessor.prototype.process_SetNumberOfCores = function(seqid, input, output) {
  var args = new CoresRegistry_SetNumberOfCores_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.SetNumberOfCores.length === 2) {
    Q.fcall(this._handler.SetNumberOfCores.bind(this._handler),
      args.partner,
      args.numberOfCores
    ).then(function(result) {
      var result_obj = new CoresRegistry_SetNumberOfCores_result({success: result});
      output.writeMessageBegin("SetNumberOfCores", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      if (err instanceof ttypes.UnknownPartner) {
        result = new CoresRegistry_SetNumberOfCores_result(err);
        output.writeMessageBegin("SetNumberOfCores", Thrift.MessageType.REPLY, seqid);
      } else {
        result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("SetNumberOfCores", Thrift.MessageType.EXCEPTION, seqid);
      }
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.SetNumberOfCores(args.partner, args.numberOfCores, function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined') || err instanceof ttypes.UnknownPartner) {
        result_obj = new CoresRegistry_SetNumberOfCores_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("SetNumberOfCores", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("SetNumberOfCores", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
CoresRegistryProcessor.prototype.process_ResetAfterDebugSession = function(seqid, input, output) {
  var args = new CoresRegistry_ResetAfterDebugSession_args();
  args.read(input);
  input.readMessageEnd();
  if (this._handler.ResetAfterDebugSession.length === 0) {
    Q.fcall(this._handler.ResetAfterDebugSession.bind(this._handler)
    ).then(function(result) {
      var result_obj = new CoresRegistry_ResetAfterDebugSession_result({success: result});
      output.writeMessageBegin("ResetAfterDebugSession", Thrift.MessageType.REPLY, seqid);
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    }).catch(function (err) {
      var result;
      result = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
      output.writeMessageBegin("ResetAfterDebugSession", Thrift.MessageType.EXCEPTION, seqid);
      result.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  } else {
    this._handler.ResetAfterDebugSession(function (err, result) {
      var result_obj;
      if ((err === null || typeof err === 'undefined')) {
        result_obj = new CoresRegistry_ResetAfterDebugSession_result((err !== null || typeof err === 'undefined') ? err : {success: result});
        output.writeMessageBegin("ResetAfterDebugSession", Thrift.MessageType.REPLY, seqid);
      } else {
        result_obj = new Thrift.TApplicationException(Thrift.TApplicationExceptionType.UNKNOWN, err.message);
        output.writeMessageBegin("ResetAfterDebugSession", Thrift.MessageType.EXCEPTION, seqid);
      }
      result_obj.write(output);
      output.writeMessageEnd();
      output.flush();
    });
  }
};
